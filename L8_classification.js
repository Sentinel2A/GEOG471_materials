//Skip to line 723 for codes
/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var ROI = /* color: #d63000 */ee.Geometry.Point([-54.324828749984846, -3.8497818409334172]),
    L8 = ee.ImageCollection("LANDSAT/LC08/C02/T1_TOA"),
    Forest = 
    /* color: #0c7a12 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.MultiPoint(
            [[-55.08001136037487, -3.9299302835361196],
             [-55.05323218557018, -3.885402088399013],
             [-54.90526007863659, -3.8155894458046657],
             [-54.89168244448653, -3.7281838545550583],
             [-54.96893006411543, -3.701803552483038],
             [-54.63403299117779, -3.6709555798455358],
             [-54.18626695731987, -3.7436003280034997],
             [-54.140477282426964, -3.7883928437360797],
             [-54.119084241705856, -3.81816476251115],
             [-54.067414167242966, -3.8470051816099313],
             [-54.01540077002617, -3.847775916884676],
             [-54.070776339074115, -3.7953307298823016],
             [-54.04313936407964, -3.8860375027705487],
             [-54.11806585970495, -3.8937371935109826],
             [-54.12155534496825, -3.927301521461023],
             [-54.166565898110484, -3.9769382298223634],
             [-54.20459472813568, -3.9739837333777883],
             [-54.47766750690393, -4.127435389213123],
             [-54.4962944797505, -4.1852484044319365],
             [-54.51445629758697, -4.24746144357279],
             [-54.44647839231353, -4.2585887069774016],
             [-54.53511004376797, -4.363448041586571],
             [-54.657161282781644, -4.362249893924735],
             [-54.60578155954332, -4.429048379471348],
             [-54.66637802560777, -4.463790757584706],
             [-54.72457123239488, -4.550896160663572],
             [-54.780661133939034, -4.5609489484955175],
             [-54.24700433694317, -4.275542475766269],
             [-54.239624380965566, -4.415301043922442],
             [-54.20606458177123, -4.088844296947459],
             [-54.06213757664427, -4.26975099723659],
             [-54.147642627527944, -4.05473120147204],
             [-54.10587543834909, -4.426019377856551],
             [-54.10287136425241, -4.038010456763348],
             [-54.073018324857095, -3.9999114234529407],
             [-54.095334303861, -3.964541943676909],
             [-53.95019452821757, -3.938318778039423],
             [-53.90450533226553, -3.901449063156418],
             [-53.87856900841108, -3.8775903331406103],
             [-53.924316765369085, -3.862647032408387],
             [-53.95380653511657, -3.8255151491953083],
             [-53.98854190912978, -3.7876968531242077],
             [-54.04090716040159, -3.7556049711784456],
             [-54.00743319189573, -3.7209500097706902],
             [-54.46435714468837, -3.815388829737227],
             [-54.60499768367992, -3.832696066408534],
             [-54.646282244837145, -3.832696066408534],
             [-54.572897006189685, -3.745768374500331],
             [-54.89940239582446, -3.8862049928161766],
             [-54.658561483959225, -3.779037010117882],
             [-54.68782974872973, -3.765076915741223],
             [-54.77322916268061, -4.0538041502113185],
             [-55.2074037003393, -4.52536231505766],
             [-55.04878858803461, -4.0382647062991595],
             [-54.78618959664057, -4.00388851732069],
             [-55.29104690520431, -4.519967451124464],
             [-54.738640594169155, -4.009449505836245],
             [-54.75454547392578, -3.979243581725109],
             [-54.83793994735776, -3.9911419427277823],
             [-54.86321953360254, -3.951378553553023],
             [-54.52037516252706, -4.004245907109497],
             [-54.4675034584255, -3.994998769060461],
             [-54.5721457766327, -3.947290644691086],
             [-54.53184463492943, -3.939674647883803],
             [-54.23427824994892, -3.695200327112417],
             [-54.23501793011658, -3.6568676877535693],
             [-54.20755210980408, -3.634425553787132],
             [-54.358602281076564, -3.6760652340729987],
             [-54.415843376314314, -3.647891784330912],
             [-54.46880091110435, -3.6532024893949298],
             [-54.5125745622274, -3.632130797611313],
             [-54.54773518666648, -3.6639652191037353],
             [-54.45691424333337, -3.712426534738146],
             [-54.58780604326013, -3.692384071682831],
             [-55.347718900186536, -3.7385657884037915],
             [-55.249871915323254, -3.6729569520091077],
             [-55.33677928726335, -3.681583923796331],
             [-54.7561346797194, -3.666680079724384],
             [-55.32090060989518, -3.6405549266475634],
             [-54.82522388985475, -3.640216968902504],
             [-55.06039997628053, -3.7448843140817165],
             [-55.37022032698644, -3.6309586880315576],
             [-55.14560141524328, -4.028665471108179],
             [-54.92527403792394, -3.6491180852084852],
             [-54.45186775683575, -4.486256965005842],
             [-54.38732307910138, -4.319209920694922],
             [-54.1634766435545, -4.471196892238484],
             [-53.960229573242, -4.327426220883299],
             [-54.267846760742, -4.139113954606772],
             [-55.1564102813494, -3.9391411386618382]]),
        {
          "landcover": 0,
          "system:index": "0"
        }),
    Water = 
    /* color: #152dff */
    /* shown: false */
    ee.Feature(
        ee.Geometry.MultiPoint(
            [[-54.03657924156228, -4.556859571474731],
             [-54.03687964897195, -4.550819885372575],
             [-54.042394270706566, -4.554028381760065],
             [-54.041663185597834, -4.5307054607781],
             [-54.03170682573455, -4.523261486730708],
             [-54.01436902666229, -4.530962148172207],
             [-54.01205159807342, -4.534470200089498],
             [-54.011193291188654, -4.5376359884172475],
             [-54.00673009538787, -4.539432781023017],
             [-53.99797536516326, -4.545678739550482],
             [-53.991967216969904, -4.536865933074295],
             [-53.984832908011505, -4.534959527112057],
             [-53.99320231856368, -4.541353786785291],
             [-53.986559051641734, -4.529169794766133],
             [-53.98591532147816, -4.52442105146542],
             [-53.97625936902455, -4.535843651564486],
             [-53.967075485357554, -4.524634959491405],
             [-53.96939291394642, -4.521041296269641],
             [-54.017903771899114, -4.526412702495063],
             [-54.02343985130585, -4.52530038280122],
             [-53.98029872195459, -4.494249053462028],
             [-53.97888251559473, -4.489885134796721],
             [-53.97725173251367, -4.486120164386958],
             [-53.968926155731445, -4.4843660238165155],
             [-53.970170700714355, -4.480857730041704],
             [-53.94698484871633, -4.4809432983829005],
             [-53.94376619789846, -4.480258751372969],
             [-53.93634184334524, -4.483082503657435],
             [-53.93355234596975, -4.48055824076867],
             [-53.930677017905786, -4.487189760227966],
             [-53.94700630638845, -4.495302354773724],
             [-53.94822939369924, -4.498746404415063],
             [-53.95138367150076, -4.502596875411618],
             [-53.95861490700491, -4.503024704264827],
             [-53.963399967887476, -4.50557028073867],
             [-53.96996601555593, -4.514961027753708],
             [-53.96610363457449, -4.517420998351104],
             [-53.97226198647268, -4.511880704985342],
             [-53.98507221672781, -4.514629465861374],
             [-53.98460014794119, -4.519335491433321],
             [-53.926441608678466, -4.490103894641497],
             [-53.922986923467285, -4.491002350349364],
             [-53.91961806894458, -4.490938174978351],
             [-53.91590589166797, -4.488264196168833],
             [-53.915422420538654, -4.482780830375782],
             [-53.91548679355501, -4.477860646857382],
             [-53.915143929649645, -4.473542159613274],
             [-53.91522976033812, -4.47125317989176],
             [-53.929348908592516, -4.474312282023439],
             [-53.924413644005114, -4.4705472314319055],
             [-53.92117353551512, -4.467616468433801],
             [-53.91349168889647, -4.462803146127345],
             [-53.910659276176744, -4.460193242612319],
             [-53.90246244542723, -4.459508676220521],
             [-53.89654012792235, -4.459337534522889],
             [-53.89387937657958, -4.46374442052851],
             [-53.88735624425536, -4.471060648561072],
             [-53.88499590032225, -4.472772036393251],
             [-53.88186308019286, -4.4745262047714105],
             [-53.882653570059325, -4.469605965760918],
             [-53.87758955943921, -4.474740127456865],
             [-53.86286959636548, -4.475424679630312],
             [-53.8633416651521, -4.479018568036009],
             [-53.86505827892163, -4.471103433305589],
             [-53.85827765453198, -4.473627728809951],
             [-53.85711894023755, -4.466097601249514],
             [-54.062782600250614, -4.5658525511266355],
             [-54.056989028778446, -4.569232096200253],
             [-54.05158169540442, -4.569488769858878],
             [-54.094940322310016, -4.556930607362686],
             [-54.0884171899858, -4.553422664734698],
             [-54.16731230900782, -4.5720183450042295],
             [-54.208902829020175, -4.571219287156679],
             [-54.2143101623942, -4.5637329524461006],
             [-54.24405049595133, -4.566256925450805],
             [-54.24701165470377, -4.5631340422945295],
             [-54.25924252781168, -4.556075420737524],
             [-54.26267575535074, -4.553808091225067],
             [-54.26915597233072, -4.551412414541915],
             [-54.27293252262369, -4.551882994519841],
             [-54.28096829507192, -4.554503138406077],
             [-54.28431569192251, -4.560620627813587],
             [-54.284873591397606, -4.551979124113702],
             [-54.28671895119985, -4.570203163812112],
             [-54.29152546975454, -4.564727444625118],
             [-54.28882180306753, -4.562374583700732],
             [-54.30066643807729, -4.5723421052608835],
             [-55.36738791975111, -3.6665934813596253],
             [-53.983223362408545, -4.506913131405043],
             [-54.25178807513272, -4.545153751027345]]),
        {
          "landcover": 2,
          "system:index": "0"
        }),
    Urban = 
    /* color: #8b6c09 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.MultiPoint(
            [[-54.22064663193854, -3.8621718384921735],
             [-54.21850086472663, -3.8630710135392596],
             [-54.21725631974372, -3.865768532962403],
             [-54.213866007548894, -3.8645268187379886],
             [-54.22030330918464, -3.869536482234058],
             [-54.21592594407233, -3.868166320800911],
             [-54.21489597581061, -3.8708638240090014],
             [-54.2112910868946, -3.8706069193116908],
             [-54.21888710282477, -3.8724480679199176],
             [-54.209831965190496, -3.8719770767966115],
             [-54.209874880534734, -3.866367980557883],
             [-54.22440562346327, -3.8708285672846032],
             [-54.234276152638074, -3.8740719825179495],
             [-54.241341563934625, -3.8760640693623474],
             [-54.248100730652155, -3.878055065885032],
             [-54.288360808259064, -3.8896017346134397],
             [-54.31475312994673, -3.890607308003613],
             [-54.322907045352004, -3.888359441790024],
             [-54.379259892137604, -3.8873180157555445],
             [-54.37818700853165, -3.8869754828116205],
             [-54.37853033128555, -3.8850915491332776],
             [-54.379753418596344, -3.8854340828423166],
             [-54.392447799898655, -3.8872130516756145],
             [-54.41649112150815, -3.8898997899619436],
             [-54.432162007009524, -3.892768489113717],
             [-54.45027228227808, -3.893239468637629],
             [-54.527841363843635, -3.902764998649133],
             [-54.56198473127189, -3.918641143747376],
             [-54.56151266248527, -3.9194225173575634],
             [-54.60087630471763, -3.9393641269713187],
             [-54.6081289978939, -3.9356178980218983],
             [-54.633234474273294, -3.944651632837029],
             [-54.64938795703304, -3.977056904730478],
             [-54.65599867228301, -3.984626949958445],
             [-54.695776258447545, -4.034328497891007],
             [-54.723429330646, -4.050376944661305],
             [-54.75584814892131, -4.0628580432605235],
             [-54.90565256320797, -4.09885860691347],
             [-54.90749792301022, -4.097339007533207],
             [-54.91233829523857, -4.104064241179782],
             [-54.91283182169731, -4.109414885345267],
             [-54.912703075664595, -4.113224522114003],
             [-54.90761760737236, -4.116071036574353],
             [-54.931940354853594, -4.117220312457651],
             [-55.1573998027246, -4.1100018643398455],
             [-54.8242479883073, -3.91999049033199],
             [-53.95283680976801, -3.847929862953052],
             [-53.944463971330876, -3.832407220151753],
             [-53.910525717539755, -3.7979741916594842],
             [-53.857838048907176, -3.76308426796868],
             [-53.87545479771699, -3.7707495184828455],
             [-53.8868914319953, -3.7820018592622837],
             [-54.07728859006302, -3.861151432501035],
             [-54.089393835486334, -3.8628729542769955],
             [-54.10599920469192, -3.863576799375341],
             [-54.122298540511714, -3.8576706260866036],
             [-54.14011001982751, -3.8540482369277784],
             [-54.21068284745698, -3.8680191435147617],
             [-54.33432264103906, -3.8923680938789817],
             [-54.354173777202014, -3.8856747394755478],
             [-54.37851750622118, -3.882731086716218],
             [-54.49922022721998, -3.8954729609019876],
             [-54.177312178041724, -3.857784141768154],
             [-54.03230316600062, -3.857661995460019],
             [-53.996765545355444, -3.8657366715366015],
             [-53.9796492781159, -3.8596825791550935],
             [-55.09567025542483, -4.12906887453024],
             [-55.071278329700796, -4.115026391183392],
             [-55.01328991838697, -4.108125588892818],
             [-54.973391424762305, -4.125595985445096],
             [-54.88159745177122, -4.086162169387783],
             [-54.673528676171, -4.008279576400774],
             [-54.47471643796239, -3.8938344198946604],
             [-54.15959059347515, -3.852961508675645],
             [-54.82565969180909, -4.082107905108167],
             [-54.799313953699624, -4.075353518763987],
             [-54.77339468166207, -4.067737618990338],
             [-55.134822282946836, -4.1146833266387715],
             [-55.180461967947956, -4.129643437990303],
             [-55.210413859495056, -4.131345276422197],
             [-55.32184536839921, -4.154908245989571],
             [-55.036078567336034, -4.10860787242564],
             [-54.640849285540476, -3.9632658036065074],
             [-54.01351841609323, -3.863658729251661],
             [-53.961160443286424, -3.853796753687162],
             [-53.93176554009171, -3.806227136676561],
             [-53.897153857619735, -3.7871080135172384],
             [-54.0571498536784, -3.8596957446507787],
             [-54.19677212936743, -3.8628880781053994],
             [-54.267377619376965, -3.8875935310375835]]),
        {
          "landcover": 3,
          "system:index": "0"
        }),
    Deforested = 
    /* color: #09ff4f */
    /* shown: false */
    ee.Feature(
        ee.Geometry.MultiPoint(
            [[-54.59638044951478, -3.910751473160971],
             [-54.3358064457688, -3.8540146496132905],
             [-54.35816270853881, -3.821935046015981],
             [-54.5325479889696, -3.8512114077954744],
             [-54.29807075166405, -3.7797578388361206],
             [-54.32648070954979, -3.789564020350664],
             [-54.296775128971255, -3.814881195532733],
             [-54.26532387586131, -3.8072410859296806],
             [-54.2671573539118, -3.8471833335440913],
             [-54.232744817445024, -3.8600679409769487],
             [-54.22448617777715, -3.9186597171898785],
             [-54.17479020914922, -3.8839360243370233],
             [-54.26847440562139, -3.93111879261255],
             [-54.285705872737516, -3.953784517268782],
             [-54.336238611918056, -3.9583872917704777],
             [-54.45384565743827, -3.941014523457851],
             [-54.35909988287795, -3.9681152566958096],
             [-54.23746027744504, -3.97613412055745],
             [-54.26617887522566, -4.020583726283218],
             [-54.33959436699415, -4.038924309535587],
             [-54.37008533873771, -4.045767139129187],
             [-54.48472812818085, -4.06154163022242],
             [-54.402785116786106, -4.097364744607057],
             [-54.35248833333884, -4.096037768181679],
             [-54.313143147580085, -4.090290449089756],
             [-54.33841986171174, -4.12773671173556],
             [-54.45011013078495, -4.188650861413147],
             [-54.74459365563624, -4.272416705266144],
             [-54.794487443883625, -4.256374232436364],
             [-54.807783008299495, -4.223519892013329],
             [-54.783376911471755, -4.198540031537104],
             [-54.81370241701503, -4.183794063365754],
             [-54.83497322886701, -4.160807302283524],
             [-54.85969246714826, -4.144328270001992],
             [-54.88410267265366, -4.156808773747679],
             [-55.08734974296616, -4.258115613363104],
             [-54.98830112846421, -4.116659055405536],
             [-55.08215698631333, -4.175085208271334],
             [-55.115244716721044, -4.148248237049669],
             [-54.925861241604785, -4.186105706764172],
             [-54.893999470739395, -4.2254724596141084],
             [-54.93487741763178, -4.2638984023853395],
             [-55.099954347579036, -4.300181500144122],
             [-54.975371103255306, -4.2929919846877915],
             [-54.93787243113496, -4.317729247319182],
             [-54.92271342757918, -4.333440878156236],
             [-54.70277577817814, -4.119471214574601],
             [-54.61003865864461, -4.080218969729288],
             [-54.714023492431686, -3.9837781934701226],
             [-54.806892297363326, -3.878331642983559],
             [-54.81819449183037, -3.7917391841686694],
             [-55.27464361735873, -3.6165760256876625],
             [-54.70214218381393, -3.815479974264027],
             [-54.388746035915794, -3.7321360359138516],
             [-54.351873509382735, -3.6344661950941717],
             [-54.012410653883144, -3.634548082901701],
             [-53.86126281147592, -3.6400301818172673],
             [-54.02216412359207, -4.040614594685498],
             [-53.96723248296707, -4.059107729760341],
             [-53.872731347811616, -4.158361895603987],
             [-54.87146476574269, -4.400676783791248],
             [-54.82322791881886, -4.392632441598816],
             [-54.93142379685766, -4.47719698223823],
             [-55.07341507646708, -4.467436839137933],
             [-55.23162790090701, -4.283490832838952],
             [-55.27863686983611, -4.281955779479027],
             [-55.331758913199955, -4.256979372208372],
             [-55.32917054387492, -4.227154656836675],
             [-55.35920874337694, -4.148210712726025],
             [-54.060026534503415, -4.149648773350819],
             [-53.94617781036165, -4.135925774979377],
             [-54.64569197280887, -4.183185425158159],
             [-54.656820794962165, -4.124197961906682],
             [-54.55366273554621, -3.764697311372034],
             [-54.43655099247521, -3.8326484748806586],
             [-54.13954197621376, -3.6459261153993907],
             [-54.002746372936436, -3.679704077943589],
             [-53.89433520571268, -3.707328978183529],
             [-53.92637129461367, -3.7900808798681296],
             [-54.70342089765003, -3.9135225275945897],
             [-54.73680903546741, -3.9028186407136918],
             [-55.3678362571471, -3.617578251105779],
             [-54.76267934442002, -3.826373263279065],
             [-54.781704735523185, -4.12543916441486],
             [-54.74557001567455, -4.0923496356845135],
             [-54.782219719654044, -4.062530783805202],
             [-54.80838344818915, -3.999118378737911],
             [-54.78504756112329, -3.9486608789122952],
             [-54.06342403401242, -3.913940154832906],
             [-54.007157745649856, -3.811848563634081]]),
        {
          "landcover": 1,
          "system:index": "0"
        }),
    vForest = 
    /* color: #09821a */
    /* displayProperties: [
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      }
    ] */
    ee.Feature(
        ee.Geometry.MultiPolygon(
            [[[[-54.22171586140299, -4.263634519476722],
               [-54.22171586140299, -4.270396348871572],
               [-54.21373360737467, -4.270396348871572],
               [-54.21373360737467, -4.263634519476722]]],
             [[[-54.45225709065104, -4.261109517289889],
               [-54.45225709065104, -4.26641629194257],
               [-54.444875651442054, -4.26641629194257],
               [-54.444875651442054, -4.261109517289889]]],
             [[[-54.508930333825234, -4.1674995651367475],
               [-54.508930333825234, -4.173577407186981],
               [-54.498373159142616, -4.173577407186981],
               [-54.498373159142616, -4.1674995651367475]]],
             [[[-55.284237670366295, -4.519469663692501],
               [-55.284237670366295, -4.527512616979424],
               [-55.273766326372154, -4.527512616979424],
               [-55.273766326372154, -4.519469663692501]]],
             [[[-54.99454017244724, -3.8348242994500192],
               [-54.99454017244724, -3.841846628718576],
               [-54.98346801363376, -3.841846628718576],
               [-54.98346801363376, -3.8348242994500192]]],
             [[[-55.30596933646482, -3.736583844664687],
               [-55.30596933646482, -3.7448060362343214],
               [-55.296356299355445, -3.7448060362343214],
               [-55.296356299355445, -3.736583844664687]]],
             [[[-54.683345712934226, -4.485751705622741],
               [-54.683345712934226, -4.492340394418491],
               [-54.675620950971336, -4.492340394418491],
               [-54.675620950971336, -4.485751705622741]]],
             [[[-54.09319491967835, -4.508580042247685],
               [-54.09319491967835, -4.516280859670366],
               [-54.08482642755189, -4.516280859670366],
               [-54.08482642755189, -4.508580042247685]]],
             [[[-54.09590520148794, -3.617367313848459],
               [-54.09590520148794, -3.6274751001051913],
               [-54.08157147651235, -3.6274751001051913],
               [-54.08157147651235, -3.617367313848459]]],
             [[[-53.93025636114618, -3.6445941390850076],
               [-53.93025636114618, -3.6525173859754556],
               [-53.91768216528436, -3.6525173859754556],
               [-53.91768216528436, -3.6445941390850076]]]], null, false),
        {
          "system:index": "0",
          "landcover": 0
        }),
    vDeforested = 
    /* color: #0ad63a */
    /* displayProperties: [
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      }
    ] */
    ee.Feature(
        ee.Geometry.MultiPolygon(
            [[[[-54.60601092162438, -4.101923648503212],
               [-54.60601092162438, -4.1077879683482195],
               [-54.598414905694206, -4.1077879683482195],
               [-54.598414905694206, -4.101923648503212]]],
             [[[-54.78574130329428, -3.975968179396126],
               [-54.78574130329428, -3.982432774562395],
               [-54.778617356150725, -3.982432774562395],
               [-54.778617356150725, -3.975968179396126]]],
             [[[-55.110068975303214, -4.216866786037288],
               [-55.110068975303214, -4.223457829788521],
               [-55.10290211281542, -4.223457829788521],
               [-55.10290211281542, -4.216866786037288]]],
             [[[-53.8700603775665, -3.861515235196624],
               [-53.8700603775665, -3.8660539220682897],
               [-53.857786589114355, -3.8660539220682897],
               [-53.857786589114355, -3.861515235196624]]],
             [[[-54.88866902461923, -4.285640786013455],
               [-54.88866902461923, -4.292102856291504],
               [-54.87819768062509, -4.292102856291504],
               [-54.87819768062509, -4.285640786013455]]],
             [[[-54.782882536988204, -4.1472474556068],
               [-54.782882536988204, -4.157734113558173],
               [-54.7750290289926, -4.157734113558173],
               [-54.7750290289926, -4.1472474556068]]],
             [[[-54.24926193487409, -4.110793576267037],
               [-54.24926193487409, -4.116871853963644],
               [-54.238919336912666, -4.116871853963644],
               [-54.238919336912666, -4.110793576267037]]],
             [[[-54.16019661924584, -4.111718467633645],
               [-54.16019661924584, -4.11565650742368],
               [-54.15169938108666, -4.11565650742368],
               [-54.15169938108666, -4.111718467633645]]],
             [[[-55.24031714303589, -4.138658204167816],
               [-55.24031714303589, -4.148588538668535],
               [-55.22358015878296, -4.148588538668535],
               [-55.22358015878296, -4.138658204167816]]],
             [[[-55.352466471377234, -4.36345828492001],
               [-55.352466471377234, -4.368764344362109],
               [-55.33984936017118, -4.368764344362109],
               [-55.33984936017118, -4.36345828492001]]]], null, false),
        {
          "system:index": "0",
          "landcover": 1
        }),
    vWater = 
    /* color: #134bff */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      }
    ] */
    ee.Feature(
        ee.Geometry.MultiPolygon(
            [[[[-54.01350021151646, -4.535009195242136],
               [-54.01350021151646, -4.537918296375633],
               [-54.00948762683018, -4.537918296375633],
               [-54.00948762683018, -4.535009195242136]]],
             [[[-53.93907845261345, -4.482191238638659],
               [-53.93907845261345, -4.483774248441244],
               [-53.93440068009148, -4.483774248441244],
               [-53.93440068009148, -4.482191238638659]]],
             [[[-53.886360455907884, -4.466912385377346],
               [-53.886360455907884, -4.468666567782311],
               [-53.883077432073655, -4.468666567782311],
               [-53.883077432073655, -4.466912385377346]]],
             [[[-53.91359560953091, -4.459066654652182],
               [-53.91359560953091, -4.461633776876405],
               [-53.90889637933682, -4.461633776876405],
               [-53.90889637933682, -4.459066654652182]]],
             [[[-53.980763250065706, -4.492392363579186],
               [-53.980763250065706, -4.494702668770722],
               [-53.97868185587015, -4.494702668770722],
               [-53.97868185587015, -4.492392363579186]]],
             [[[-54.21332301834376, -4.566610647411995],
               [-54.21332301834376, -4.5683218096563225],
               [-54.21147765854151, -4.5683218096563225],
               [-54.21147765854151, -4.566610647411995]]],
             [[[-54.04346553859232, -4.5291697241024265],
               [-54.04346553859232, -4.532934471411901],
               [-54.03956024226664, -4.532934471411901],
               [-54.03956024226664, -4.5291697241024265]]],
             [[[-55.370149841052296, -3.6620161127822355],
               [-55.370149841052296, -3.677433958612568],
               [-55.360193481189015, -3.677433958612568],
               [-55.360193481189015, -3.6620161127822355]]],
             [[[-54.25465943833191, -4.543228749069635],
               [-54.25465943833191, -4.5447902355540615],
               [-54.25255658646424, -4.5447902355540615],
               [-54.25255658646424, -4.543228749069635]]],
             [[[-54.0619867028661, -4.564783466674726],
               [-54.0619867028661, -4.566066842009449],
               [-54.056600827164196, -4.566066842009449],
               [-54.056600827164196, -4.564783466674726]]]], null, false),
        {
          "system:index": "0",
          "landcover": 2
        }),
    vUrban = 
    /* color: #8b7a19 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      }
    ] */
    ee.Feature(
        ee.Geometry.MultiPolygon(
            [[[[-54.91430415725542, -4.10910920646745],
               [-54.91430415725542, -4.113047259151619],
               [-54.910012622831594, -4.113047259151619],
               [-54.910012622831594, -4.10910920646745]]],
             [[[-54.91078509902788, -4.096781263740201],
               [-54.91078509902788, -4.101746707999012],
               [-54.903489490507376, -4.101746707999012],
               [-54.903489490507376, -4.096781263740201]]],
             [[[-54.91013831470742, -4.091288068211821],
               [-54.91013831470742, -4.093428364382365],
               [-54.90533179615273, -4.093428364382365],
               [-54.90533179615273, -4.091288068211821]]],
             [[[-54.21896426972944, -3.8673560805824865],
               [-54.21896426972944, -3.870738665837729],
               [-54.211582830520456, -3.870738665837729],
               [-54.211582830520456, -3.8673560805824865]]],
             [[[-54.21930759248335, -3.8629458542173647],
               [-54.21930759248335, -3.8654721031938575],
               [-54.21450107392866, -3.8654721031938575],
               [-54.21450107392866, -3.8629458542173647]]],
             [[[-54.562742623663176, -3.9165109079047427],
               [-54.562742623663176, -3.917988028287631],
               [-54.56072560248398, -3.917988028287631],
               [-54.56072560248398, -3.9165109079047427]]],
             [[[-54.910114933572395, -4.08357071309758],
               [-54.910114933572395, -4.085882254969918],
               [-54.906982113443, -4.085882254969918],
               [-54.906982113443, -4.08357071309758]]],
             [[[-54.893108012035555, -4.087186398345917],
               [-54.893108012035555, -4.088941450612105],
               [-54.890618922069734, -4.088941450612105],
               [-54.890618922069734, -4.087186398345917]]],
             [[[-55.35117378024888, -4.168487312065407],
               [-55.35117378024888, -4.170242184574927],
               [-55.348985097692726, -4.170242184574927],
               [-55.348985097692726, -4.168487312065407]]],
             [[[-54.212490084927474, -3.871192081584606],
               [-54.212490084927474, -3.872562238122523],
               [-54.207726481717025, -3.872562238122523],
               [-54.207726481717025, -3.871192081584606]]]], null, false),
        {
          "system:index": "0",
          "landcover": 3
        }),
    study_area = ee.FeatureCollection("users/choodavi608/Final_study_area");
/***** End of imports. If edited, may not auto-convert in the playground. *****/

//Study Area Polygon
var shp = ee.FeatureCollection(study_area);
Map.addLayer(shp,{},"Area of Interest")

//Load all the landsat images in the desired date
var image17 = ee.Image('LANDSAT/LC08/C01/T1_TOA/LC08_227063_20170718').clip(study_area);
var image18 = ee.Image('LANDSAT/LC08/C01/T1_TOA/LC08_227063_20180721').clip(study_area);
var image19 = ee.Image('LANDSAT/LC08/C01/T1_TOA/LC08_227063_20190724').clip(study_area);
var image20 = ee.Image('LANDSAT/LC08/C01/T1_TOA/LC08_227063_20200726').clip(study_area);
var image21 = ee.Image('LANDSAT/LC08/C01/T1_TOA/LC08_227063_20210729').clip(study_area);

//Add ndvi bands to all of the images
var ndvi17 = image17.normalizedDifference(['B5','B4']).rename('NDVI');
image17 = image17.addBands(ndvi17)
var ndvi18 = image18.normalizedDifference(['B5','B4']).rename('NDVI');
image18 = image18.addBands(ndvi18)
var ndvi19 = image19.normalizedDifference(['B5','B4']).rename('NDVI');
image19 = image19.addBands(ndvi19)
var ndvi20 = image20.normalizedDifference(['B5','B4']).rename('NDVI');
image20 = image20.addBands(ndvi20)
var ndvi21 = image21.normalizedDifference(['B5','B4']).rename('NDVI');
image21 = image21.addBands(ndvi21)

// Mask the clouds within Landsat-8 images
var scored17 = ee.Algorithms.Landsat.simpleCloudScore(image17);
var scored18 = ee.Algorithms.Landsat.simpleCloudScore(image18);
var scored19 = ee.Algorithms.Landsat.simpleCloudScore(image19);
var scored20 = ee.Algorithms.Landsat.simpleCloudScore(image20);
var scored21 = ee.Algorithms.Landsat.simpleCloudScore(image21);

var mask30_17 = scored17.select(['cloud']).lte(15);
var mask30_18 = scored18.select(['cloud']).lte(15);
var mask30_19 = scored19.select(['cloud']).lte(15);
var mask30_20 = scored20.select(['cloud']).lte(15);
var mask30_21 = scored21.select(['cloud']).lte(15);

//Update the Landsat-8 images so that clouds are removed
var masked30_17 = image17.updateMask(mask30_17);
var image_mask17 = image17.mask(mask30_17);
var masked30_18 = image18.updateMask(mask30_18);
var image_mask18 = image18.mask(mask30_18);
var masked30_19 = image19.updateMask(mask30_19);
var image_mask19 = image19.mask(mask30_19);
var masked30_20 = image20.updateMask(mask30_20);
var image_mask20 = image20.mask(mask30_20);
var masked30_21 = image21.updateMask(mask30_21);
var image_mask21 = image21.mask(mask30_21);

// Convert the RGB bands to the HSV color space.
var hsv17 = image_mask17.select(['B4', 'B3', 'B2']).rgbToHsv();
var hsv18 = image_mask18.select(['B4', 'B3', 'B2']).rgbToHsv();
var hsv19 = image_mask19.select(['B4', 'B3', 'B2']).rgbToHsv();
var hsv20 = image_mask20.select(['B4', 'B3', 'B2']).rgbToHsv();
var hsv21 = image_mask21.select(['B4', 'B3', 'B2']).rgbToHsv();

// Swap in the panchromatic band and convert back to RGB.
var sharpened17 = ee.Image.cat([
  hsv17.select('hue'), hsv17.select('saturation'), image_mask17.select('B8')
]).hsvToRgb();
var sharpened18 = ee.Image.cat([
  hsv18.select('hue'), hsv18.select('saturation'), image_mask18.select('B8')
]).hsvToRgb();
var sharpened19 = ee.Image.cat([
  hsv19.select('hue'), hsv19.select('saturation'), image_mask19.select('B8')
]).hsvToRgb();
var sharpened20 = ee.Image.cat([
  hsv20.select('hue'), hsv20.select('saturation'), image_mask20.select('B8')
]).hsvToRgb();
var sharpened21 = ee.Image.cat([
  hsv21.select('hue'), hsv21.select('saturation'), image_mask21.select('B8')
]).hsvToRgb();

//Add other image bands to the sharpened collection
sharpened17 = sharpened17.addBands(image17).clip(study_area)
sharpened18 = sharpened18.addBands(image18).clip(study_area)
sharpened19 = sharpened19.addBands(image19).clip(study_area)
sharpened20 = sharpened20.addBands(image20).clip(study_area)
sharpened21 = sharpened21.addBands(image21).clip(study_area)

// Display the pan-sharpened result.

Map.addLayer(sharpened17,
             {min: 0, max: 0.25, gamma: [1.3, 1.3, 1.3]},
             'pan-sharpened');
             
// Merge points together
var newfc = ee.FeatureCollection([ee.Feature(Water),ee.Feature(Deforested),ee.Feature(Forest)]);
print(newfc, 'newfc')

// Select the bands for training
var bands = ['B5', 'red', 'green','NDVI'];

// Sample the input imagery to get a FeatureCollection of training data.
var training = sharpened17.select(bands).sampleRegions({
  collection: newfc,
  properties: ['landcover'],
  scale: 30
});

// Make a Random Forest classifier and train it.
var classifier = ee.Classifier.smileRandomForest(100).train({
  features: training,
  classProperty: 'landcover',
  inputProperties: bands
});

// Classify the input imagery.
var classified_17 = sharpened17.select(bands).classify(classifier);

// Define a palette for the Land Use classification.
var palette = [
  'green', //Forest (0) green
  'LawnGreen', //Deforested (1)
  'blue', //Water (2) 
  'black', //Bare (3)  
];

// Display the classification result and the input image.
Map.addLayer(classified_17, {min: 0, max: 3, palette: palette}, 'Land Use Classification');

//Gather 70-30 ratio of training band for error matrix
var sample_rc_17 = training.randomColumn()
var train_17 = sample_rc_17.filter(ee.Filter.lt('random', 0.7))
var validation_17 = sample_rc_17.filter(ee.Filter.gte('random', 0.7))
print(sample_rc_17)

//Train the validation sample points
var vclassifier_17 = ee.Classifier.smileRandomForest(100).train({
  features: train_17,
  classProperty: "landcover",
  inputProperties: bands
});

//Create confusion matrix for 70% sample points
var confuseMatrix_17 = ee.ConfusionMatrix(validation_17.classify(vclassifier_17).errorMatrix({actual: 'landcover',predicted: 'classification'}))
//print(confuseMatrix)

print('Confusion Matrix', confuseMatrix_17)
print('Overall Accuracy', confuseMatrix_17.accuracy())

//Gather the polygons drawn for validation of classification
var valNames = ee.FeatureCollection([ee.Feature(vWater),ee.Feature(vDeforested),ee.Feature(vForest)]);

//Designate the validation polygons as the sample region for validation matrix
var validation_17 = classified_17.sampleRegions({
  collection: valNames,
  properties: ['landcover'],
  scale: 30,
});

//Create the matrix for 2017
var testAccuracy_17 = validation_17.errorMatrix('landcover', 'classification');
//Print the error matrix to the console
print('Validation error matrix: ', testAccuracy_17);
//Print the overall accuracy to the console
print('Validation overall accuracy: ', testAccuracy_17.accuracy());

//Export the classification result to drive
Export.image.toDrive({
  image: classified_17,
  description: 'L8_classification_2017',
  region: study_area,
  scale:30,
  crs:"EPSG:4326",
  fileFormat: 'GeoTIFF'
})

var exportAccuracy_17 = ee.Feature(null, {matrix: testAccuracy_17.array()})
var exportConfuse_17 = ee.Feature(null, {matrix: confuseMatrix_17.array()})

// Export the matrixes.
Export.table.toDrive({
  collection: ee.FeatureCollection(exportAccuracy_17),
  description: '2017_accuracies',
  fileFormat: 'CSV'
});
Export.table.toDrive({
  collection: ee.FeatureCollection(exportConfuse_17),
  description: '2017_accuracies_error',
  fileFormat: 'CSV'
});

//Process repeated for 2018------------------

Map.addLayer(sharpened18,
             {min: 0, max: 0.25, gamma: [1.3, 1.3, 1.3]},
             'pan-sharpened18');

// Classify the input imagery.
var classified_18 = sharpened18.select(bands).classify(classifier);
//var classified17 = classified17.focalMedian(3,'square','pixels',1);

// Display the classification result and the input image.
//Map.setCenter(-96.0171, 29.6803);
Map.addLayer(classified_18, {min: 0, max: 3, palette: palette}, 'Land Use Classification18');

var sample_rc_18 = training.randomColumn()
var train_18 = sample_rc_18.filter(ee.Filter.lt('random', 0.7))
var validation_18 = sample_rc_18.filter(ee.Filter.gte('random', 0.7))
var vclassifier_18 = ee.Classifier.smileRandomForest(100).train({
  features: train_18,
  classProperty: "landcover",
  inputProperties: bands
});

var confuseMatrix_18 = ee.ConfusionMatrix(validation_18.classify(vclassifier_18).errorMatrix({actual: 'landcover',predicted: 'classification'}))
//print(confuseMatrix)


print('Confusion Matrix18', confuseMatrix_18)
print('Overall Accuracy18', confuseMatrix_18.accuracy())

var validation_18 = classified_18.sampleRegions({
  collection: valNames,
  properties: ['landcover'],
  scale: 30,
});

var testAccuracy_18 = validation_18.errorMatrix('landcover', 'classification');
//Print the error matrix to the console
print('Validation error matrix18: ', testAccuracy_18);
//Print the overall accuracy to the console
print('Validation overall accuracy18: ', testAccuracy_18.accuracy());

Export.image.toDrive({
  image: classified_18,
  description: 'L8_classification_2018',
  region: study_area,
  scale:30,
  crs:"EPSG:4326",
  fileFormat: 'GeoTIFF'
})

var exportAccuracy_18 = ee.Feature(null, {matrix: testAccuracy_18.array()})
var exportConfuse_18 = ee.Feature(null, {matrix: confuseMatrix_18.array()})
// Export the FeatureCollection.

Export.table.toDrive({
  collection: ee.FeatureCollection(exportAccuracy_18),
  description: '2018_accuracies',
  fileFormat: 'CSV'
});
Export.table.toDrive({
  collection: ee.FeatureCollection(exportConfuse_18),
  description: '2018_accuracies_error',
  fileFormat: 'CSV'
});

//Process repeated for 2019------------------

Map.addLayer(sharpened19,
             {min: 0, max: 0.25, gamma: [1.3, 1.3, 1.3]},
             'pan-sharpened1');

// Classify the input imagery.
var classified_19 = sharpened19.select(bands).classify(classifier);
//var classified17 = classified17.focalMedian(3,'square','pixels',1);

// Display the classification result and the input image.
//Map.setCenter(-96.0171, 29.6803);
Map.addLayer(classified_19, {min: 0, max: 3, palette: palette}, 'Land Use Classification19');

var sample_rc_19 = training.randomColumn()
var train_19 = sample_rc_19.filter(ee.Filter.lt('random', 0.7))
var validation_19 = sample_rc_19.filter(ee.Filter.gte('random', 0.7))
var vclassifier_19 = ee.Classifier.smileRandomForest(100).train({
  features: train_19,
  classProperty: "landcover",
  inputProperties: bands
});

var confuseMatrix_19 = ee.ConfusionMatrix(validation_19.classify(vclassifier_19).errorMatrix({actual: 'landcover',predicted: 'classification'}))
//print(confuseMatrix)


print('Confusion Matrix19', confuseMatrix_19)
print('Overall Accuracy19', confuseMatrix_19.accuracy())

var validation_19 = classified_19.sampleRegions({
  collection: valNames,
  properties: ['landcover'],
  scale: 30,
});

var testAccuracy_19 = validation_19.errorMatrix('landcover', 'classification');
//Print the error matrix to the console
print('Validation error matrix19: ', testAccuracy_19);
//Print the overall accuracy to the console
print('Validation overall accuracy19: ', testAccuracy_19.accuracy());

Export.image.toDrive({
  image: classified_19,
  description: 'L8_classification_2019',
  region: study_area,
  scale:30,
  crs:"EPSG:4326",
  fileFormat: 'GeoTIFF'
})

var exportAccuracy_19 = ee.Feature(null, {matrix: testAccuracy_19.array()})
var exportConfuse_19 = ee.Feature(null, {matrix: confuseMatrix_19.array()})
// Export the FeatureCollection.

Export.table.toDrive({
  collection: ee.FeatureCollection(exportAccuracy_19),
  description: '2019_accuracies',
  fileFormat: 'CSV'
});
Export.table.toDrive({
  collection: ee.FeatureCollection(exportConfuse_19),
  description: '2019_accuracies_error',
  fileFormat: 'CSV'
});

//Process repeated for 2020------------------

Map.addLayer(sharpened20,
             {min: 0, max: 0.25, gamma: [1.3, 1.3, 1.3]},
             'pan-sharpened20');

// Classify the input imagery.
var classified_20 = sharpened20.select(bands).classify(classifier);
//var classified17 = classified17.focalMedian(3,'square','pixels',1);

// Display the classification result and the input image.
//Map.setCenter(-96.0171, 29.6803);
Map.addLayer(classified_20, {min: 0, max: 3, palette: palette}, 'Land Use Classification20');

var sample_rc_20 = training.randomColumn()
var train_20 = sample_rc_20.filter(ee.Filter.lt('random', 0.7))
var validation_20 = sample_rc_20.filter(ee.Filter.gte('random', 0.7))
var vclassifier_20 = ee.Classifier.smileRandomForest(100).train({
  features: train_20,
  classProperty: "landcover",
  inputProperties: bands
});

var confuseMatrix_20 = ee.ConfusionMatrix(validation_20.classify(vclassifier_20).errorMatrix({actual: 'landcover',predicted: 'classification'}))
//print(confuseMatrix)


print('Confusion Matrix20', confuseMatrix_20)
print('Overall Accuracy20', confuseMatrix_20.accuracy())

var validation_20 = classified_20.sampleRegions({
  collection: valNames,
  properties: ['landcover'],
  scale: 30,
});

var testAccuracy_20 = validation_20.errorMatrix('landcover', 'classification');
//Print the error matrix to the console
print('Validation error matrix20: ', testAccuracy_20);
//Print the overall accuracy to the console
print('Validation overall accuracy20: ', testAccuracy_20.accuracy());

Export.image.toDrive({
  image: classified_20,
  description: 'L8_classification_2020',
  region: study_area,
  scale:30,
  crs:"EPSG:4326",
  fileFormat: 'GeoTIFF'
})

var exportAccuracy_20 = ee.Feature(null, {matrix: testAccuracy_20.array()})
var exportConfuse_20 = ee.Feature(null, {matrix: confuseMatrix_20.array()})
// Export the FeatureCollection.

Export.table.toDrive({
  collection: ee.FeatureCollection(exportAccuracy_20),
  description: '2020_accuracies',
  fileFormat: 'CSV'
});
Export.table.toDrive({
  collection: ee.FeatureCollection(exportConfuse_20),
  description: '2020_accuracies_error',
  fileFormat: 'CSV'
});

//Process repeated for 2021------------------

Map.addLayer(sharpened21,
             {min: 0, max: 0.25, gamma: [1.3, 1.3, 1.3]},
             'pan-sharpened21');

// Classify the input imagery.
var classified_21 = sharpened21.select(bands).classify(classifier);
//var classified17 = classified17.focalMedian(3,'square','pixels',1);

// Display the classification result and the input image.
//Map.setCenter(-96.0171, 29.6803);
Map.addLayer(classified_21, {min: 0, max: 3, palette: palette}, 'Land Use Classification21');

var sample_rc_21 = training.randomColumn()
var train_21 = sample_rc_21.filter(ee.Filter.lt('random', 0.7))
var validation_21 = sample_rc_21.filter(ee.Filter.gte('random', 0.7))
var vclassifier_21 = ee.Classifier.smileRandomForest(100).train({
  features: train_21,
  classProperty: "landcover",
  inputProperties: bands
});

var confuseMatrix_21 = ee.ConfusionMatrix(validation_21.classify(vclassifier_21).errorMatrix({actual: 'landcover',predicted: 'classification'}))
//print(confuseMatrix)


print('Confusion Matrix21', confuseMatrix_21)
print('Overall Accuracy21', confuseMatrix_21.accuracy())

var validation_21 = classified_21.sampleRegions({
  collection: valNames,
  properties: ['landcover'],
  scale: 30,
});

var testAccuracy_21 = validation_21.errorMatrix('landcover', 'classification');
//Print the error matrix to the console
print('Validation error matrix21: ', testAccuracy_21);
//Print the overall accuracy to the console
print('Validation overall accuracy21: ', testAccuracy_21.accuracy());

Export.image.toDrive({
  image: classified_21,
  description: 'L8_classification_2021',
  region: study_area,
  scale:30,
  crs:"EPSG:4326",
  fileFormat: 'GeoTIFF'
})

var exportAccuracy_21 = ee.Feature(null, {matrix: testAccuracy_21.array()})
var exportConfuse_21 = ee.Feature(null, {matrix: confuseMatrix_21.array()})
// Export the FeatureCollection.

Export.table.toDrive({
  collection: ee.FeatureCollection(exportAccuracy_21),
  description: '2021_accuracies',
  fileFormat: 'CSV'
});
Export.table.toDrive({
  collection: ee.FeatureCollection(exportConfuse_21),
  description: '2021_accuracies_error',
  fileFormat: 'CSV'
});